<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup >
    <AssemblyVersionInfoPath>$(MSBuildProjectDirectory)\AssemblyVersionInfo.cs</AssemblyVersionInfoPath>
    <GenerateAssemblyVersionInfo Condition="'$(GenerateAssemblyVersionInfo)' == '' AND Exists('$(AssemblyVersionInfoPath)')">false</GenerateAssemblyVersionInfo>
    <GenerateAssemblyVersionInfo Condition="'$(GenerateAssemblyVersionInfo)' == '' AND !Exists('$(AssemblyVersionInfoPath)')">true</GenerateAssemblyVersionInfo>
  </PropertyGroup>

  <PropertyGroup Condition="$(GenerateAssemblyVersionInfo)">
    <!-- 0.1.YMMDD.HHMM -->
    <Year Condition="'$(Year)' == ''">$([System.DateTime]::Now.Year)</Year>
    <YearMinus4>$([MSBuild]::Subtract($(Year), 4))</YearMinus4>
    <YearMinus4String>$(YearMinus4.ToString())</YearMinus4String>
    <LastDigitOfYear>$(YearMinus4String.Substring(3,1))</LastDigitOfYear>
    <Date Condition="'$(Date)' == ''">$([System.DateTime]::Now.ToString("MMdd"))</Date>
    <Time Condition="'$(Time)' == ''">$([System.DateTime]::Now.ToString("HHmm"))</Time>

    <MajorVersion>0</MajorVersion>
    <MinorVersion>5</MinorVersion>
    <Build>$(LastDigitOfYear)$(Date)</Build>
    <Revision>$(Time)</Revision>
    <BuildNumber Condition="'$(BuildNumber)' == ''">$(Build).$(Revision)</BuildNumber>

    <AssemblyVersion>$(MajorVersion).$(MinorVersion).$(BuildNumber)</AssemblyVersion>
    <BuildVersion>$(MajorVersion).$(MinorVersion).$(Build).$(Revision)</BuildVersion>
  </PropertyGroup>

  <ItemGroup Condition="$(GenerateAssemblyVersionInfo)">
    <AssemblyVersionAttribute Include="System.Reflection.AssemblyVersionAttribute">
      <_Parameter1>$(AssemblyVersion)</_Parameter1>
    </AssemblyVersionAttribute>
    <AssemblyVersionAttribute Include="System.Reflection.AssemblyFileVersionAttribute">
      <_Parameter1>$(BuildVersion)</_Parameter1>
    </AssemblyVersionAttribute>
    <AssemblyVersionAttribute Include="System.Reflection.AssemblyInformationalVersionAttribute">
      <_Parameter1>$(BuildVersion)</_Parameter1>
    </AssemblyVersionAttribute>
  </ItemGroup>

  <!-- C# -->
  <Target Name="DeleteVersionInfoFile" BeforeTargets="GenerateAssemblyInfoFile" Condition="$(GenerateAssemblyVersionInfo)">
    <Delete Files="$(AssemblyVersionInfoPath)" />
  </Target>

  <Target Name="GenerateAssemblyInfoFile"
          Condition="'$(MSBuildProjectExtension)'!='.vcxproj' AND $(GenerateAssemblyVersionInfo)"
          Inputs="$(MSBuildProjectFullPath)"
          Outputs="$(AssemblyVersionInfoPath)">
    <WriteCodeFragment AssemblyAttributes="@(AssemblyVersionAttribute)"
                       Language="C#"
                       OutputFile="$(AssemblyVersionInfoPath)">
      <Output TaskParameter="OutputFile" ItemName="Compile" />
      <Output TaskParameter="OutputFile" ItemName="FileWrites" />
    </WriteCodeFragment>
  </Target>

  <PropertyGroup Condition="$(GenerateAssemblyVersionInfo)">
    <CompileDependsOn>DeleteVersionInfoFile;$(CompileDependsOn)</CompileDependsOn>
    <CompileDependsOn>GenerateAssemblyInfoFile;$(CompileDependsOn)</CompileDependsOn>
  </PropertyGroup>

  <!-- C++ -->
  <Target Name="GenerateNativeVersionInfoFile"
          Condition="'$(MSBuildProjectExtension)'=='.vcxproj' AND $(GenerateAssemblyVersionInfo)"
          Inputs="$(MSBuildProjectFullPath)"
          Outputs="$(MSBuildProjectDirectory)\GeneratedVersion.h"
          BeforeTargets="PrepareForBuild">
    <WriteLinesToFile File="$(MSBuildProjectDirectory)\GeneratedVersion.h"
                      Overwrite="true"
                      Lines="#define VER_FILEVERSION $(MajorVersion),$(MinorVersion),$(Build),$(Revision);
                             #define VER_FILEVERSION_STR &quot;$(BuildVersion)\0&quot;;
                             #define VER_PRODUCTVERSION $(MajorVersion),$(MinorVersion),$(Build),$(Revision);
                             #define VER_PRODUCTVERSION_STR &quot;$(BuildVersion)\0&quot;">
    </WriteLinesToFile>
  </Target>
</Project>
